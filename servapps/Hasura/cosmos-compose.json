{
    "cosmos-installer": {},
    "minVersion": "0.9.0",
    "services": {
        "{ServiceName}": {
            "image": "hasura/graphql-engine:v2.35.0",
            "container_name": "{ServiceName}",
            "restart": "unless-stopped",
            "environment": [
                "HASURA_GRAPHQL_METADATA_DATABASE_URL=postgres://connector:{Passwords.0}@{ServiceName}-postgres:5432/connector",
                "PG_DATABASE_URL=postgres://connector:{Passwords.0}@{ServiceName}-postgres:5432/connector",
                "HASURA_GRAPHQL_ENABLE_CONSOLE=true",
                "HASURA_GRAPHQL_DEV_MODE=true",
                "HASURA_GRAPHQL_ENABLED_LOG_TYPES=http-log",
                "HASURA_GRAPHQL_METADATA_DEFAULTS={\"backend_configs\":{\"dataconnector\":{\"athena\":{\"uri\":\"http://{ServiceName}-postgres:8081/api/v1/athena\"},\"mariadb\":{\"uri\":\"http://{ServiceName}-postgres:8081/api/v1/mariadb\"},\"mysql8\":{\"uri\":\"http://{ServiceName}-postgres:8081/api/v1/mysql\"},\"oracle\":{\"uri\":\"http://{ServiceName}-postgres:8081/api/v1/oracle\"},\"snowflake\":{\"uri\":\"http://{ServiceName}-postgres:8081/api/v1/snowflake\"}}}}"
            ],
            "labels": {
                "cosmos-persistent-env": "",
                "cosmos-force-network-secured": "true",
                "cosmos-auto-update": "true",
                "cosmos.stack": "{ServiceName}-engine",
                "cosmos-icon": "https://cosmos.manhtuong.net/servapps/Hasura/logo/icon.png"
            },
            "networks": {
                "{ServiceName}-postgres": {}
            },
            "routes": [{
                "name": "{ServiceName}",
                "description": "Expose {ServiceName} to the web",
                "useHost": true,
                "target": "http://{ServiceName}:8080",
                "mode": "SERVAPP",
                "Timeout": 14400000,
                "ThrottlePerMinute": 12000,
                "BlockCommonBots": true,
                "SmartShield": {
                    "Enabled": true
                }
            }]
        },
        "{ServiceName}-connector-agent": {
            "image": "hasura/graphql-data-connector:v2.35.0",
            "container_name": "{ServiceName}-connector-agent",
            "restart": "unless-stopped",
            "environment": [
                "QUARKUS_LOG_LEVEL=ERROR",
                "QUARKUS_OPENTELEMETRY_ENABLED=false"
            ],
            "labels": {
                "cosmos-persistent-env": "",
                "cosmos-force-network-secured": "true",
                "cosmos.stack": "{ServiceName}-engine",
                "cosmos-auto-update": "true",
                "cosmos-icon": "https://cosmos.manhtuong.net/servapps/Hasura/logo/icon.png"
            },
            "networks": {
                "{ServiceName}-postgres": {}
            },
            "routes": [{
                "name": "{ServiceName}-connector-agent",
                "description": "Expose {ServiceName}-connector-agent to the web",
                "useHost": true,
                "target": "http://{ServiceName}-connector-agent:8081",
                "mode": "SERVAPP",
                "Timeout": 14400000,
                "ThrottlePerMinute": 12000,
                "BlockCommonBots": true,
                "SmartShield": {
                    "Enabled": true
                }
            }]
        },

        "{ServiceName}-postgres": {
            "image": "postgres:15-alpine",
            "container_name": "{ServiceName}-postgres",
            "hostname": "{ServiceName}-postgres",
            "restart": "unless-stopped",
            "networks": {
                "{ServiceName}-postgres": {}
            },
            "stop_grace_period": 5,
            "security_opt": [
                "seccomp:unconfined",
                "apparmor:unconfined"
            ],
            "volumes": [{
                "source": "{ServiceName}-postgres-data",
                "target": "/var/lib/postgresql/data",
                "type": "volume"
            }],
            "labels": {
                "cosmos.stack": "{ServiceName}-engine",
                "cosmos-persistent-env": "POSTGRES_DB, POSTGRES_USER, POSTGRES_PASSWORD"
            },
            "environment": [
                "POSTGRES_DB=connector",
                "POSTGRES_USER=connector",
                "POSTGRES_PASSWORD={Passwords.0}"
            ]
        }
    },

    "networks": {
        "{ServiceName}-postgres": {}
    }
}